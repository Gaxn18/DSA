class Solution{
    //Function to check whether there is a subarray present with 0-sum or not.
    static boolean findsum(int arr[],int n)
    {
        //Your code here
        // HashMap<Integer,Integer> m= new HashMap<>();
        // int cursum=0;
        // int sum=0;
        // int start=0;
        // int end=-1;
        // for(int i=0;i<n;i++){
        //     cursum += arr[i];
        //     if(cursum-sum==0){
        //         start=0;
        //         end=i;
        //         break;
        //     }
        //     if(m.containsKey(cursum-sum)){
        //         start=m.get(cursum-sum)+1;
        //         end=i;
        //         break;
        //     }
        //     m.put(cursum,i);
        // }
        // if(end==-1)
        //     return false;
        // else
        //     return true;
        HashSet<Integer> hs = new HashSet<>();
        int sum = 0;
         for(int i =0;i<n;i++){
          hs.add(sum);
            sum += arr[i];
            if(hs.contains(sum)){
                return true;
            }
        }
        return false;
    }
}
